###################################################################################################
# application
###################################################################################################
application {

  # environment default is: dev
  env = dev

  # contains the simple name of the Application class. set it at runtime
  # name = App.class.getSimpleName()

  # application namespace, default to app package. set it at runtime
  # ns = App.class.getPackage().getName()

  # tmpdir
  tmpdir = ${java.io.tmpdir}/${application.name}

  # path (a.k.a. as contextPath)
  path = /

  # localhost
  host = localhost

  # default port is: 8080
  port = 8080

  # we do UTF-8
  charset = UTF-8

  # date format
  dateFormat = dd-MM-yy

  # number format, system default. set it at runtime
  # numberFormat = DecimalFormat.getInstance(${application.lang})).toPattern()

  # lang (a.k.a locale), system default. set it at runtime
  # lang = Locale.getDefault()

  # timezone, system default. set it at runtime
  # tz = ZoneId.systemDefault().getId()
}

###################################################################################################
# session defaults
###################################################################################################
session {
  # we suggest a timeout, but usage and an implementation is specific to a Session.Store implementation
  timeout = 30m

  # save interval, how frequently we must save a none-dirty session (in millis).
  saveInterval = 60s

  cookie {
    # name of the cookie
    name = jooby.sid

    # cookie path
    path = /

    # expires when the user closes the web browser
    maxAge = -1

    httpOnly = true

    secure = false
  }
}

###################################################################################################
# server defaults
###################################################################################################
server {
  http {

    HeaderSize = 8k

    # Max response buffer size
    ResponseBufferSize = 16k

    MaxRequestSize = 200k

    IdleTimeout = 30s

    Method = _method
  }

  threads {
    Min = 20
    Max = 200
    IdleTimeout = 60s
  }

  ws {
    # The maximum size of a text message.
    MaxTextMessageSize = 16k

    # The maximum size of a binary message.
    MaxBinaryMessageSize = 16k

    # The time in ms (milliseconds) that a websocket may be idle before closing.
    IdleTimeout = 5minutes
  }
}

###################################################################################################
# runtime
###################################################################################################

# number of available processors, set it at runtime
# runtime.processors = Runtime.getRuntime().availableProcessors()
# runtime.processors-plus1 = ${runtime.processors} + 1
# runtime.processors-plus2 = ${runtime.processors} + 2
# runtime.processors-x2 = ${runtime.processors} * 2

###################################################################################################
# status codes
###################################################################################################
err.java.lang.IllegalArgumentException = 400
err.java.util.NoSuchElementException = 400
err.java.io.FileNotFoundException = 404
